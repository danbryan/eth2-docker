# Please adjust the below variable to your local user ID if you are on Linux.
# This is vital for key import to work. You can find your UID with "echo $UID".
LOCAL_UID=1000
# Client choice: See SETUP.md for available options
COMPOSE_FILE=lh-base.yml:geth.yml:lh-grafana.yml
# ETH1 endpoint / chain source. This default uses the eth1 node container
# For Lighthouse, you can specify multiple endpoints separated by commas
ETH1_NODE=http://eth1:8545
# Graffiti to use for validator, in order to receive POAP
GRAFFITI=eth2-docker
# Network to use for eth2. If using main net, set to mainnet.
NETWORK=pyrmont
# Network to use for eth1. If using main net, set to mainnet. Not in use for Geth.
ETH1_NETWORK=goerli
# If using Geth as the eth1 node and main net, comment out.
GETH1_NETWORK=--goerli

# Some clients suggest adjusting to higher (or lower) peer count. Adjust here, per client
PRYSM_PEER_COUNT=30
LH_PEER_COUNT=50
TEKU_PEER_COUNT=74
NIM_PEER_COUNT=160

# P2P ports you will forward to your staking node. Adjust here if you are
# going to use something other than defaults.
ETH1_PORT=30303
LH_PORT=9000
PRYSM_PORT=13000
PRYSM_UDP_PORT=12000
NIM_PORT=9000
TEKU_PORT=9000
# Local grafana dashboard port. Do not expose to Internet, it is insecure http
GRAFANA_PORT=3000
# ETH1 RPC port, important when using shared-eth1.yml. Also insecure, do not expose to Internet.
ETH1_RPC_PORT=8545
# ETH1 WS port, used with Nimbus. Ditto insecure, do not expose to Internet.
ETH1_WS_PORT=8546

# Uncomment this if you need to restrict teku to use 6 GiB of heap
#TEKU_LOW_MEM=-Xmx6G

# Leave this as-is to compile nimbus with support for metrics via grafana. 
# Change to empty (nothing after first =) to disable that functionality
NIM_METRICS=NIMFLAGS="-d:insecure"
# Restart policy: Set to no if you do not want services to automatically restart
RESTART=unless-stopped
# If you want debug logs, set this to debug instead of info
LOG_LEVEL=info

# You can set specific version targets and choose
# binary or source builds below. 
# Doing so is entirely optional, and arguably advanced
# use.

LH_SRC_BUILD_TARGET=stable
LH_DOCKER_TAG=latest
# Change to Dockerfile.source to build from source
LH_DOCKERFILE=Dockerfile.binary
LH_USER=lighthouse

GETH_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
GETH_DOCKER_TAG=stable
# Change to Dockerfile.source to build from source
GETH_DOCKERFILE=Dockerfile.binary
GETH_USER=geth

# Build target dev/nightly until #74 has been pulled into main. At that point, switch to release tracking
OE_SRC_BUILD_TARGET=dev
#OE_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
OE_DOCKER_TAG=nightly
#OE_DOCKER_TAG=latest
# Change to Dockerfile.source to build from source
OE_DOCKERFILE=Dockerfile.binary
#Used only for source build; binary build defaults to this
OE_USER=openethereum

NM_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
NM_DOCKER_TAG=latest
# Change to Dockerfile.source to build from source
NM_DOCKERFILE=Dockerfile.binary
NM_USER=nethermind

BESU_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
BESU_DOCKER_TAG=latest
# Change to Dockerfile.source to build from source
BESU_DOCKERFILE=Dockerfile.binary
# Used only for source build; binary build defaults to this
BESU_USER=besu

PRYSM_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
PRYSM_DOCKER_TAG=stable
# Change to Dockerfile.source to build from source
PRYSM_DOCKERFILE=Dockerfile.binary
PRYSM_USER=prysm

TEKU_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
TEKU_DOCKER_TAG=latest
# Change to Dockerfile.source to build from source
TEKU_DOCKERFILE=Dockerfile.binary
# Used only for source build; binary build defaults to this
TEKU_USER=teku

NIM_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
# Docker tag will eventually be stable or stable-latest when statusteam introduce that
NIM_DOCKER_TAG=devel
# Binary images at docker hub are not for public consumption and won't run. They'd need
# to be built with NIMFLAGS="-d:disableMarchNative" to work. This can become binary
# once statusteam create docker images meant for public use.
NIM_DOCKERFILE=Dockerfile.source
NIM_USER=nimbus

DEPCLI_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
# Does not (yet?) exist on Docker hub
DEPCLI_DOCKER_TAG=nonesuch
DEPCLI_USER=depcli
DEPCLI_LOCALDIR=./.eth2
