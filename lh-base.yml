version: "3.4"
services:
  beacon:
    restart: "${RESTART}"
    user: ${LOCAL_UID}:${LOCAL_UID}
    build:
      context: ./lighthouse
      dockerfile: ${LH_DOCKERFILE}
      args:
        - BUILD_TARGET=${LH_SRC_BUILD_TARGET}
        - USER=${LH_USER}
        - UID=${LOCAL_UID}
        - DOCKER_TAG=${LH_DOCKER_TAG}
    image: lighthouse
    volumes:
      - lhbeacon-data:/var/lib/lighthouse
    ports:
      - ${LH_PORT}:${LH_PORT}/tcp
      - ${LH_PORT}:${LH_PORT}/udp
    expose:
      - 5052/tcp
    entrypoint: 
      - lighthouse
      - bn
      - --datadir
      - /var/lib/lighthouse
      - --http
      - --http-address
      - 0.0.0.0
      - --network
      - ${NETWORK}
      - --port
      - ${LH_PORT}
      - --target-peers
      - ${LH_PEER_COUNT}
      - --eth1-endpoints
      - ${ETH1_NODE}
      - --debug-level=${LOG_LEVEL}
  validator:
    restart: "${RESTART}"
    user: ${LOCAL_UID}:${LOCAL_UID}
    build:
      context: ./lighthouse
      dockerfile: ${LH_DOCKERFILE}
      args:
        - BUILD_TARGET=${LH_SRC_BUILD_TARGET}
        - USER=${LH_USER}
        - UID=${LOCAL_UID}
        - DOCKER_TAG=${LH_DOCKER_TAG}
    image: lighthouse
    volumes:
      - lhvalidator-data:/var/lib/lighthouse
    entrypoint:
      - lighthouse
      - validator
      - --datadir
      - /var/lib/lighthouse
      - --beacon-node
      - http://beacon:5052
      - --graffiti
      - ${GRAFFITI}
      - --network
      - ${NETWORK}
      - --debug-level=${LOG_LEVEL}
    depends_on:
      - beacon
  validator-import:
    restart: "no"
    user: ${LOCAL_UID}:${LOCAL_UID}
    image: lighthouse
    build:
      context: ./lighthouse
      dockerfile: ${LH_DOCKERFILE}
      args:
        - BUILD_TARGET=${LH_SRC_BUILD_TARGET}
        - USER=${LH_USER}
        - UID=${LOCAL_UID}
        - DOCKER_TAG=${LH_DOCKER_TAG}
    volumes:
      - lhvalidator-data:/var/lib/lighthouse
      - ${DEPCLI_LOCALDIR}/validator_keys:/var/lib/lighthouse/validator_keys
    entrypoint:
      - query-lh-validator-passwords.sh
      - lighthouse
      - account
      - validator
      - import
      - --datadir
      - /var/lib/lighthouse
      - --directory
      - /var/lib/lighthouse/validator_keys
      - --network
      - ${NETWORK}
      - --debug-level=${LOG_LEVEL}
  validator-voluntary-exit:
    restart: "no"
    user: ${LOCAL_UID}:${LOCAL_UID}
    image: lighthouse
    build:
      context: ./lighthouse
      dockerfile: ${LH_DOCKERFILE}
      args:
        - BUILD_TARGET=${LH_SRC_BUILD_TARGET}
        - USER=${LH_USER}
        - UID=${LOCAL_UID}
        - DOCKER_TAG=${LH_DOCKER_TAG}
    volumes:
      - lhvalidator-data:/var/lib/lighthouse
      - ${DEPCLI_LOCALDIR}/validator_keys:/var/lib/lighthouse/validator_keys
    entrypoint:
      - lighthouse
      - account
      - validator
      - exit
      - --beacon-node
      - http://beacon:5052 
      - --datadir
      - /var/lib/lighthouse
      - --network
      - ${NETWORK}
      - --debug-level=${LOG_LEVEL}
      - --keystore
    depends_on:
      - beacon
  validator-account:
    restart: "no"
    user: ${LOCAL_UID}:${LOCAL_UID}
    image: lighthouse
    build:
      context: ./lighthouse
      dockerfile: ${LH_DOCKERFILE}
      args:
        - BUILD_TARGET=${LH_SRC_BUILD_TARGET}
        - USER=${LH_USER}
        - UID=${LOCAL_UID}
        - DOCKER_TAG=${LH_DOCKER_TAG}
    volumes:
      - lhvalidator-data:/var/lib/lighthouse
      - ${DEPCLI_LOCALDIR}:/interchange
    entrypoint:
      - lighthouse
      - account
      - validator
      - --datadir
      - /var/lib/lighthouse
      - --network
      - ${NETWORK}
      - --debug-level=${LOG_LEVEL}
  deposit-cli:
    restart: "no"
    user: ${LOCAL_UID}:${LOCAL_UID}
    build:
      context: ./eth2.0-deposit-cli
      args:
        - BUILD_TARGET=${DEPCLI_SRC_BUILD_TARGET}
        - USER=${DEPCLI_USER}
        - UID=${LOCAL_UID}
    image: eth2.0-deposit-cli
    volumes:
      - ${DEPCLI_LOCALDIR}:/var/lib/depcli-data
    entrypoint:
      - python3
      - /app/eth2deposit/deposit.py
      - new-mnemonic
      - --folder
      - /var/lib/depcli-data
      - --chain
      - ${NETWORK}
  deposit-cli-add-recover:
    restart: "no"
    user: ${LOCAL_UID}:${LOCAL_UID}
    build:
      context: ./eth2.0-deposit-cli
      args:
        - BUILD_TARGET=${DEPCLI_SRC_BUILD_TARGET}
        - USER=${DEPCLI_USER}
        - UID=${LOCAL_UID}
    image: eth2.0-deposit-cli
    volumes:
      - ${DEPCLI_LOCALDIR}:/var/lib/depcli-data
    entrypoint:
      - python3
      - /app/eth2deposit/deposit.py
      - existing-mnemonic
      - --folder
      - /var/lib/depcli-data
      - --chain
      - ${NETWORK}
  eth2:
    image: tianon/true
    restart: "no"
    depends_on:
      - beacon
      - validator
volumes:
  lhbeacon-data:
  lhvalidator-data:
